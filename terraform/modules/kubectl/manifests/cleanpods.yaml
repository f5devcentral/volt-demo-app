kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: role-pod-cleaner
rules:
- apiGroups: [""]
  resources:
  - deployments
  - pods
  verbs: ["get", "list", "create", "update", "patch", "delete"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: rb-pod-cleaner
  namespace: ${namespace}
subjects:
- kind: ServiceAccount
  name: sa-pod-cleaner
  namespace: ${namespace}
roleRef:
  kind: Role
  name: role-pod-cleaner
  apiGroup: ""

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-pod-cleaner
  namespace: ${namespace}

---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: pod-cleaner
  annotations:
    ves.io/workload-flavor: tiny
    ves.io/virtual-sites: ${namespace}/${main_vsite}
spec:
  schedule: "*/10 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: sa-pod-cleaner
          containers:
          - name: pod-cleaner
            image: bitnami/kubectl:latest
            command:
            - /bin/sh
            - -c
            - kubectl version
            - kubectl config view
            - kubectl delete pods --field-selector=status.phase=Failed,status.phase=Error -n ${namespace}
          restartPolicy: Never